/*
 
 Created by TapTapStudio (Alice Vinnik).
 Copyright ¬©2020 TapTapStudio. All rights reserved.

 ‚ñÄ‚ñÄ‚ñà‚ñÄ‚ñÄ ‚ñë‚ñà‚ñÄ‚ñÄ‚ñà ‚ñí‚ñà‚ñÄ‚ñÄ‚ñà ‚ñÄ‚ñÄ‚ñà‚ñÄ‚ñÄ ‚ñë‚ñà‚ñÄ‚ñÄ‚ñà ‚ñí‚ñà‚ñÄ‚ñÄ‚ñà
 ‚ñë‚ñí‚ñà‚ñë‚ñë ‚ñí‚ñà‚ñÑ‚ñÑ‚ñà ‚ñí‚ñà‚ñÑ‚ñÑ‚ñà ‚ñë‚ñí‚ñà‚ñë‚ñë ‚ñí‚ñà‚ñÑ‚ñÑ‚ñà ‚ñí‚ñà‚ñÑ‚ñÑ‚ñà
 ‚ñë‚ñí‚ñà‚ñë‚ñë ‚ñí‚ñà‚ñë‚ñí‚ñà ‚ñí‚ñà‚ñë‚ñë‚ñë ‚ñë‚ñí‚ñà‚ñë‚ñë ‚ñí‚ñà‚ñë‚ñí‚ñà ‚ñí‚ñà‚ñë‚ñë‚ñë

 ‚ñí‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà ‚ñÄ‚ñÄ‚ñà‚ñÄ‚ñÄ ‚ñí‚ñà‚ñë‚ñí‚ñà ‚ñí‚ñà‚ñÄ‚ñÄ‚ñÑ ‚ñÄ‚ñà‚ñÄ ‚ñí‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà
 ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ ‚ñë‚ñí‚ñà‚ñë‚ñë ‚ñí‚ñà‚ñë‚ñí‚ñà ‚ñí‚ñà‚ñë‚ñí‚ñà ‚ñí‚ñà‚ñë ‚ñí‚ñà‚ñë‚ñë‚ñí‚ñà
 ‚ñí‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñà ‚ñë‚ñí‚ñà‚ñë‚ñë ‚ñë‚ñÄ‚ñÑ‚ñÑ‚ñÄ ‚ñí‚ñà‚ñÑ‚ñÑ‚ñÄ ‚ñÑ‚ñà‚ñÑ ‚ñí‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñà
 
 If you want reskin write me.
 Here you can see reskin examples üåÖ: https://alicevinnik.wixsite.com/taptapstudio
 Subscribe to my instagram üì∑: https://www.instagram.com/taptap_studio/
 Write to my mail üíå: taptap.main@gmail.com
 
*/

import SpriteKit

//MARK: - Game Scene
/**
 Singletone class
 This class need to preload texture files for better perfomence in game.
 Becouse creating new SKTexture objects requared many device recources.
 Also if we make many objects with same texture we can use one SKTexture object for use less device memories.
 If preloads we create one texture and can use it at many objects
    - Precondition: For getting preloads textures from this class use command like: GraphicPreloadsGame.preload.player1
 */
class GraphicPreloadsGame {
    private static var _preload: GraphicPreloadsGame?
    static var preload: GraphicPreloadsGame {
        if _preload == nil {
            _preload = GraphicPreloadsGame()
            Debugger.printNow(textToPrint: "Compleate loading graphic files for game scene")
        }
        return _preload!
    }
    
    internal let transparent = SKTexture(—ÅonsideringFiltrationSettingsInProject: "transparent")
    
    //MARK: Preloaded textures
    internal let background = SKTexture(—ÅonsideringFiltrationSettingsInProject: "backgroundGame")
    internal let pauseBackground = SKTexture(—ÅonsideringFiltrationSettingsInProject: "pauseBackground")
    
    internal let player1 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "player1")
    internal let player2 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "player2")
    internal let player3 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "player3")
    internal let player4 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "player4")
    internal let explosion = SKTexture(—ÅonsideringFiltrationSettingsInProject: "explosion")
    internal let explosion2 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "explosion2")
    internal let cloud = SKTexture(—ÅonsideringFiltrationSettingsInProject: "cloud")
    internal let enemy = SKTexture(—ÅonsideringFiltrationSettingsInProject: "enemy")
    internal let coinBlock = SKTexture(—ÅonsideringFiltrationSettingsInProject: "coinBlock")
    internal let ground1 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "ground1")
    internal let ground2 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "ground2")
    internal let ground3 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "ground3")
    internal let ground4 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "ground4")
}

//MARK: - Other scenes "Interface"
/**
Singletone class
This class need to preload texture files for better perfomence in game.
Becouse creating new SKTexture objects requared many device recources.
Also if we make many objects with same texture we can use one SKTexture object for use less device memories.
If preloads we create one texture and can use it at many objects
    - Precondition: For getting preloads textures from this class use command like: GraphicPreloadsInterface.preload.buttonStart
*/
class GraphicPreloadsInterface {
    private static var _preload: GraphicPreloadsInterface?
    static var preload: GraphicPreloadsInterface {
        if _preload == nil {
            _preload = GraphicPreloadsInterface()
            Debugger.printNow(textToPrint: "Compleate loading interface graphic files")
        }
        return _preload!
    }
    internal let transparent = SKTexture(—ÅonsideringFiltrationSettingsInProject: "transparent")
    
    //MARK: Preloaded textures
    internal let background = SKTexture(—ÅonsideringFiltrationSettingsInProject: "background")
    internal let background_TutorialScene = SKTexture(—ÅonsideringFiltrationSettingsInProject: "background_TutorialScene")
    
    internal let logo = SKTexture(—ÅonsideringFiltrationSettingsInProject: "logo")
    internal let coinsIndicator = SKTexture(—ÅonsideringFiltrationSettingsInProject: "coinsIndicator")
    
    internal let switch_Body = SKTexture(—ÅonsideringFiltrationSettingsInProject: "switch_Body")
    internal let switch_Dot = SKTexture(—ÅonsideringFiltrationSettingsInProject: "switch_Dot")
    
    internal let button_Back = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Back")
    internal let button_GameCenter = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_GameCenter")
    internal let button_Menu = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Menu")
    internal let button_Pressed = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Pressed")
    internal let button_RateUs = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_RateUs")
    internal let button_Restart = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Restart")
    internal let button_RestartPause = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_RestartPause")
    internal let button_Settigns = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Settings")
    internal let button_Share = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Share")
    internal let button_Start = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Start")
    internal let button_StartPressed = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_StartPressed")
    internal let button_Store = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Store")
    internal let button_Tutorial = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Tutorial")
    internal let button_Continue = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Continue")
    internal let button_Pause = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_Pause")
    internal let button_PausePressed = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_PausePressed")
    
    internal let indicatorButtonStore = SKTexture(—ÅonsideringFiltrationSettingsInProject: "indicatorButtonStore")
    internal let indicatorCloseTutorial = SKTexture(—ÅonsideringFiltrationSettingsInProject: "indicatorCloseTutorial")
    
    internal let button_InAppPressed = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_InAppPressed")
    internal let button_RemoveAds = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_RemoveAds")
    internal let button_RestorePurchases = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_RestorePurchases")
    internal let button_SkinNext = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_SkinNext")
    internal let button_SkinPrevious = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_SkinPrevious")
    internal let button_SkinSelector = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_SkinSelector")
    
    internal let panelBuyResultBackground = SKTexture(—ÅonsideringFiltrationSettingsInProject: "panelBuyResultBackground")
    internal let panelBuyResult = SKTexture(—ÅonsideringFiltrationSettingsInProject: "panelBuyResult")
    internal let button_BuyResultClose = SKTexture(—ÅonsideringFiltrationSettingsInProject: "button_BuyResultClose")
    
    internal let skin1 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "player1")
    internal let skin2 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "player2")
    internal let skin3 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "player3")
    internal let skin4 = SKTexture(—ÅonsideringFiltrationSettingsInProject: "player4")
}
